================================================================================
QUIXBUGS CODE CORRECTION RESULTS
================================================================================

PROCESSING MODE: sequential_fast
FAST MODE: Enabled
ACCURACY MODE: standard
MODEL: gemini-1.5-flash

OVERALL STATISTICS:
Total Programs: 41
Successfully Fixed: 40
Success Rate: 97.56%

SIMILARITY ANALYSIS:
Average Similarity to Correct Code: 62.69%
Exact Matches: 4
High Similarity (>80%): 12
Medium Similarity (50-80%): 13
Low Similarity (<50%): 15

DETAILED RESULTS:
--------------------------------------------------------------------------------
[MED] bitcount                  | Similarity: 50.52%
[LOW] breadth_first_search      | Similarity: 31.63%
[MED] bucketsort                | Similarity: 65.62%
[HIGH] depth_first_search        | Similarity: 97.23%
[MED] detect_cycle              | Similarity: 64.34%
[LOW] find_first_in_sorted      | Similarity: 42.71%
[HIGH] find_in_sorted            | Similarity: 95.55%
[EXACT] flatten                   | Similarity: 100.00%
[LOW] gcd                       | Similarity: 40.00%
[LOW] get_factors               | Similarity: 47.40%
[HIGH] hanoi                     | Similarity: 80.63%
[LOW] is_valid_parenthesization | Similarity: 23.31%
[LOW] kheapsort                 | Similarity: 34.59%
[LOW] knapsack                  | Similarity: 38.77%
[HIGH] kth                       | Similarity: 95.37%
[HIGH] lcs_length                | Similarity: 87.83%
[MED] levenshtein               | Similarity: 71.66%
[FAILED] lis                       | Failed to fix code: Rate limit exceeded after 2 attempts: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 46
}
]
[EXACT] longest_common_subsequence | Similarity: 100.00%
[LOW] max_sublist_sum           | Similarity: 14.26%
[LOW] mergesort                 | Similarity: 35.04%
[MED] minimum_spanning_tree     | Similarity: 64.19%
[HIGH] next_palindrome           | Similarity: 99.53%
[LOW] next_permutation          | Similarity: 33.66%
[MED] node                      | Similarity: 75.28%
[MED] pascal                    | Similarity: 69.12%
[LOW] possible_change           | Similarity: 26.51%
[LOW] powerset                  | Similarity: 32.66%
[MED] quicksort                 | Similarity: 65.33%
[MED] reverse_linked_list       | Similarity: 50.12%
[MED] rpn_eval                  | Similarity: 54.39%
[EXACT] shortest_paths            | Similarity: 100.00%
[HIGH] shortest_path_length      | Similarity: 99.94%
[MED] shortest_path_lengths     | Similarity: 65.77%
[MED] shunting_yard             | Similarity: 59.22%
[LOW] sieve                     | Similarity: 39.13%
[LOW] sqrt                      | Similarity: 42.41%
[EXACT] subsequences              | Similarity: 100.00%
[MED] topological_ordering      | Similarity: 74.02%
[LOW] to_base                   | Similarity: 46.71%
[HIGH] wrap                      | Similarity: 93.26%

PERFORMANCE METRICS:
Total Processing Time: 136.8 seconds
Average Time per Program: 3.3 seconds
Programs per Minute: 18.0
